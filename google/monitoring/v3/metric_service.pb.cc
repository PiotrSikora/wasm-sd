// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/metric_service.proto

#include "google/monitoring/v3/metric_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fmetric_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fmetric_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MetricDescriptor;
}  // namespace protobuf_google_2fapi_2fmetric_2eproto
namespace protobuf_google_2fapi_2fmonitored_5fresource_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fmonitored_5fresource_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MonitoredResourceDescriptor;
}  // namespace protobuf_google_2fapi_2fmonitored_5fresource_2eproto
namespace protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Aggregation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TimeInterval;
}  // namespace protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto
namespace protobuf_google_2fmonitoring_2fv3_2fmetric_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2fmetric_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_TimeSeries;
}  // namespace protobuf_google_2fmonitoring_2fv3_2fmetric_2eproto
namespace protobuf_google_2frpc_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status;
}  // namespace protobuf_google_2frpc_2fstatus_2eproto
namespace google {
namespace monitoring {
namespace v3 {
class ListMonitoredResourceDescriptorsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsRequest>
      _instance;
} _ListMonitoredResourceDescriptorsRequest_default_instance_;
class ListMonitoredResourceDescriptorsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsResponse>
      _instance;
} _ListMonitoredResourceDescriptorsResponse_default_instance_;
class GetMonitoredResourceDescriptorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMonitoredResourceDescriptorRequest>
      _instance;
} _GetMonitoredResourceDescriptorRequest_default_instance_;
class ListMetricDescriptorsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListMetricDescriptorsRequest>
      _instance;
} _ListMetricDescriptorsRequest_default_instance_;
class ListMetricDescriptorsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListMetricDescriptorsResponse>
      _instance;
} _ListMetricDescriptorsResponse_default_instance_;
class GetMetricDescriptorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMetricDescriptorRequest>
      _instance;
} _GetMetricDescriptorRequest_default_instance_;
class CreateMetricDescriptorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateMetricDescriptorRequest>
      _instance;
} _CreateMetricDescriptorRequest_default_instance_;
class DeleteMetricDescriptorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteMetricDescriptorRequest>
      _instance;
} _DeleteMetricDescriptorRequest_default_instance_;
class ListTimeSeriesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTimeSeriesRequest>
      _instance;
} _ListTimeSeriesRequest_default_instance_;
class ListTimeSeriesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTimeSeriesResponse>
      _instance;
} _ListTimeSeriesResponse_default_instance_;
class CreateTimeSeriesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTimeSeriesRequest>
      _instance;
} _CreateTimeSeriesRequest_default_instance_;
class CreateTimeSeriesErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTimeSeriesError>
      _instance;
} _CreateTimeSeriesError_default_instance_;
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto {
static void InitDefaultsListMonitoredResourceDescriptorsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListMonitoredResourceDescriptorsRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListMonitoredResourceDescriptorsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListMonitoredResourceDescriptorsRequest}, {}};

static void InitDefaultsListMonitoredResourceDescriptorsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListMonitoredResourceDescriptorsResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::ListMonitoredResourceDescriptorsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListMonitoredResourceDescriptorsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListMonitoredResourceDescriptorsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListMonitoredResourceDescriptorsResponse}, {
      &protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResourceDescriptor.base,}};

static void InitDefaultsGetMonitoredResourceDescriptorRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_GetMonitoredResourceDescriptorRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::GetMonitoredResourceDescriptorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::GetMonitoredResourceDescriptorRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMonitoredResourceDescriptorRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMonitoredResourceDescriptorRequest}, {}};

static void InitDefaultsListMetricDescriptorsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListMetricDescriptorsRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::ListMetricDescriptorsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListMetricDescriptorsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListMetricDescriptorsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListMetricDescriptorsRequest}, {}};

static void InitDefaultsListMetricDescriptorsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListMetricDescriptorsResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::ListMetricDescriptorsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListMetricDescriptorsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListMetricDescriptorsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListMetricDescriptorsResponse}, {
      &protobuf_google_2fapi_2fmetric_2eproto::scc_info_MetricDescriptor.base,}};

static void InitDefaultsGetMetricDescriptorRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_GetMetricDescriptorRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::GetMetricDescriptorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::GetMetricDescriptorRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMetricDescriptorRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMetricDescriptorRequest}, {}};

static void InitDefaultsCreateMetricDescriptorRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_CreateMetricDescriptorRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::CreateMetricDescriptorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::CreateMetricDescriptorRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateMetricDescriptorRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateMetricDescriptorRequest}, {
      &protobuf_google_2fapi_2fmetric_2eproto::scc_info_MetricDescriptor.base,}};

static void InitDefaultsDeleteMetricDescriptorRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_DeleteMetricDescriptorRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::DeleteMetricDescriptorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::DeleteMetricDescriptorRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteMetricDescriptorRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteMetricDescriptorRequest}, {}};

static void InitDefaultsListTimeSeriesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListTimeSeriesRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::ListTimeSeriesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListTimeSeriesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ListTimeSeriesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsListTimeSeriesRequest}, {
      &protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::scc_info_TimeInterval.base,
      &protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::scc_info_Aggregation.base,}};

static void InitDefaultsListTimeSeriesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListTimeSeriesResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::ListTimeSeriesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListTimeSeriesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ListTimeSeriesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsListTimeSeriesResponse}, {
      &protobuf_google_2fmonitoring_2fv3_2fmetric_2eproto::scc_info_TimeSeries.base,
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

static void InitDefaultsCreateTimeSeriesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_CreateTimeSeriesRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::CreateTimeSeriesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::CreateTimeSeriesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateTimeSeriesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateTimeSeriesRequest}, {
      &protobuf_google_2fmonitoring_2fv3_2fmetric_2eproto::scc_info_TimeSeries.base,}};

static void InitDefaultsCreateTimeSeriesError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_CreateTimeSeriesError_default_instance_;
    new (ptr) ::google::monitoring::v3::CreateTimeSeriesError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::CreateTimeSeriesError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CreateTimeSeriesError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCreateTimeSeriesError}, {
      &protobuf_google_2fmonitoring_2fv3_2fmetric_2eproto::scc_info_TimeSeries.base,
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ListMonitoredResourceDescriptorsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListMonitoredResourceDescriptorsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMonitoredResourceDescriptorRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListMetricDescriptorsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListMetricDescriptorsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMetricDescriptorRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateMetricDescriptorRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteMetricDescriptorRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListTimeSeriesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListTimeSeriesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTimeSeriesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTimeSeriesError.base);
}

}  // namespace protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto
namespace google {
namespace monitoring {
namespace v3 {
bool ListTimeSeriesRequest_TimeSeriesView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::FULL;
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::HEADERS;
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::TimeSeriesView_MIN;
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::TimeSeriesView_MAX;
const int ListTimeSeriesRequest::TimeSeriesView_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ListMonitoredResourceDescriptorsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMonitoredResourceDescriptorsRequest::kNameFieldNumber;
const int ListMonitoredResourceDescriptorsRequest::kFilterFieldNumber;
const int ListMonitoredResourceDescriptorsRequest::kPageSizeFieldNumber;
const int ListMonitoredResourceDescriptorsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListMonitoredResourceDescriptorsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
}
ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest(const ListMonitoredResourceDescriptorsRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
}

void ListMonitoredResourceDescriptorsRequest::SharedCtor() {
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListMonitoredResourceDescriptorsRequest::~ListMonitoredResourceDescriptorsRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsRequest::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMonitoredResourceDescriptorsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMonitoredResourceDescriptorsRequest& ListMonitoredResourceDescriptorsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListMonitoredResourceDescriptorsRequest.base);
  return *internal_default_instance();
}


void ListMonitoredResourceDescriptorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListMonitoredResourceDescriptorsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  return false;
#undef DO_
}

void ListMonitoredResourceDescriptorsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
}

size_t ListMonitoredResourceDescriptorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMonitoredResourceDescriptorsRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ListMonitoredResourceDescriptorsRequest*>(&from));
}

void ListMonitoredResourceDescriptorsRequest::MergeFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListMonitoredResourceDescriptorsRequest::CopyFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitoredResourceDescriptorsRequest::IsInitialized() const {
  return true;
}

void ListMonitoredResourceDescriptorsRequest::Swap(ListMonitoredResourceDescriptorsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMonitoredResourceDescriptorsRequest::InternalSwap(ListMonitoredResourceDescriptorsRequest* other) {
  using std::swap;
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ListMonitoredResourceDescriptorsRequest::GetTypeName() const {
  return "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest";
}


// ===================================================================

void ListMonitoredResourceDescriptorsResponse::InitAsDefaultInstance() {
}
void ListMonitoredResourceDescriptorsResponse::clear_resource_descriptors() {
  resource_descriptors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMonitoredResourceDescriptorsResponse::kResourceDescriptorsFieldNumber;
const int ListMonitoredResourceDescriptorsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListMonitoredResourceDescriptorsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
}
ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse(const ListMonitoredResourceDescriptorsResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      resource_descriptors_(from.resource_descriptors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
}

void ListMonitoredResourceDescriptorsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListMonitoredResourceDescriptorsResponse::~ListMonitoredResourceDescriptorsResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMonitoredResourceDescriptorsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMonitoredResourceDescriptorsResponse& ListMonitoredResourceDescriptorsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListMonitoredResourceDescriptorsResponse.base);
  return *internal_default_instance();
}


void ListMonitoredResourceDescriptorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_descriptors_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListMonitoredResourceDescriptorsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_resource_descriptors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  return false;
#undef DO_
}

void ListMonitoredResourceDescriptorsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resource_descriptors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->resource_descriptors(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
}

size_t ListMonitoredResourceDescriptorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->resource_descriptors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->resource_descriptors(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMonitoredResourceDescriptorsResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ListMonitoredResourceDescriptorsResponse*>(&from));
}

void ListMonitoredResourceDescriptorsResponse::MergeFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_descriptors_.MergeFrom(from.resource_descriptors_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListMonitoredResourceDescriptorsResponse::CopyFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitoredResourceDescriptorsResponse::IsInitialized() const {
  return true;
}

void ListMonitoredResourceDescriptorsResponse::Swap(ListMonitoredResourceDescriptorsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMonitoredResourceDescriptorsResponse::InternalSwap(ListMonitoredResourceDescriptorsResponse* other) {
  using std::swap;
  CastToBase(&resource_descriptors_)->InternalSwap(CastToBase(&other->resource_descriptors_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ListMonitoredResourceDescriptorsResponse::GetTypeName() const {
  return "google.monitoring.v3.ListMonitoredResourceDescriptorsResponse";
}


// ===================================================================

void GetMonitoredResourceDescriptorRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMonitoredResourceDescriptorRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMonitoredResourceDescriptorRequest::GetMonitoredResourceDescriptorRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_GetMonitoredResourceDescriptorRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
}
GetMonitoredResourceDescriptorRequest::GetMonitoredResourceDescriptorRequest(const GetMonitoredResourceDescriptorRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
}

void GetMonitoredResourceDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetMonitoredResourceDescriptorRequest::~GetMonitoredResourceDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  SharedDtor();
}

void GetMonitoredResourceDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMonitoredResourceDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMonitoredResourceDescriptorRequest& GetMonitoredResourceDescriptorRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_GetMonitoredResourceDescriptorRequest.base);
  return *internal_default_instance();
}


void GetMonitoredResourceDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetMonitoredResourceDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  return false;
#undef DO_
}

void GetMonitoredResourceDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
}

size_t GetMonitoredResourceDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMonitoredResourceDescriptorRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GetMonitoredResourceDescriptorRequest*>(&from));
}

void GetMonitoredResourceDescriptorRequest::MergeFrom(const GetMonitoredResourceDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetMonitoredResourceDescriptorRequest::CopyFrom(const GetMonitoredResourceDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMonitoredResourceDescriptorRequest::IsInitialized() const {
  return true;
}

void GetMonitoredResourceDescriptorRequest::Swap(GetMonitoredResourceDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMonitoredResourceDescriptorRequest::InternalSwap(GetMonitoredResourceDescriptorRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GetMonitoredResourceDescriptorRequest::GetTypeName() const {
  return "google.monitoring.v3.GetMonitoredResourceDescriptorRequest";
}


// ===================================================================

void ListMetricDescriptorsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMetricDescriptorsRequest::kNameFieldNumber;
const int ListMetricDescriptorsRequest::kFilterFieldNumber;
const int ListMetricDescriptorsRequest::kPageSizeFieldNumber;
const int ListMetricDescriptorsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMetricDescriptorsRequest::ListMetricDescriptorsRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListMetricDescriptorsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMetricDescriptorsRequest)
}
ListMetricDescriptorsRequest::ListMetricDescriptorsRequest(const ListMetricDescriptorsRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMetricDescriptorsRequest)
}

void ListMetricDescriptorsRequest::SharedCtor() {
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListMetricDescriptorsRequest::~ListMetricDescriptorsRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMetricDescriptorsRequest)
  SharedDtor();
}

void ListMetricDescriptorsRequest::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMetricDescriptorsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMetricDescriptorsRequest& ListMetricDescriptorsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListMetricDescriptorsRequest.base);
  return *internal_default_instance();
}


void ListMetricDescriptorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListMetricDescriptorsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMetricDescriptorsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMetricDescriptorsRequest)
  return false;
#undef DO_
}

void ListMetricDescriptorsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMetricDescriptorsRequest)
}

size_t ListMetricDescriptorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMetricDescriptorsRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ListMetricDescriptorsRequest*>(&from));
}

void ListMetricDescriptorsRequest::MergeFrom(const ListMetricDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListMetricDescriptorsRequest::CopyFrom(const ListMetricDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMetricDescriptorsRequest::IsInitialized() const {
  return true;
}

void ListMetricDescriptorsRequest::Swap(ListMetricDescriptorsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMetricDescriptorsRequest::InternalSwap(ListMetricDescriptorsRequest* other) {
  using std::swap;
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ListMetricDescriptorsRequest::GetTypeName() const {
  return "google.monitoring.v3.ListMetricDescriptorsRequest";
}


// ===================================================================

void ListMetricDescriptorsResponse::InitAsDefaultInstance() {
}
void ListMetricDescriptorsResponse::clear_metric_descriptors() {
  metric_descriptors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMetricDescriptorsResponse::kMetricDescriptorsFieldNumber;
const int ListMetricDescriptorsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMetricDescriptorsResponse::ListMetricDescriptorsResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListMetricDescriptorsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMetricDescriptorsResponse)
}
ListMetricDescriptorsResponse::ListMetricDescriptorsResponse(const ListMetricDescriptorsResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      metric_descriptors_(from.metric_descriptors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMetricDescriptorsResponse)
}

void ListMetricDescriptorsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListMetricDescriptorsResponse::~ListMetricDescriptorsResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMetricDescriptorsResponse)
  SharedDtor();
}

void ListMetricDescriptorsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMetricDescriptorsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMetricDescriptorsResponse& ListMetricDescriptorsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListMetricDescriptorsResponse.base);
  return *internal_default_instance();
}


void ListMetricDescriptorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_descriptors_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListMetricDescriptorsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.MetricDescriptor metric_descriptors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metric_descriptors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMetricDescriptorsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMetricDescriptorsResponse)
  return false;
#undef DO_
}

void ListMetricDescriptorsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.MetricDescriptor metric_descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metric_descriptors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->metric_descriptors(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMetricDescriptorsResponse)
}

size_t ListMetricDescriptorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .google.api.MetricDescriptor metric_descriptors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->metric_descriptors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metric_descriptors(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMetricDescriptorsResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ListMetricDescriptorsResponse*>(&from));
}

void ListMetricDescriptorsResponse::MergeFrom(const ListMetricDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metric_descriptors_.MergeFrom(from.metric_descriptors_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListMetricDescriptorsResponse::CopyFrom(const ListMetricDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMetricDescriptorsResponse::IsInitialized() const {
  return true;
}

void ListMetricDescriptorsResponse::Swap(ListMetricDescriptorsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMetricDescriptorsResponse::InternalSwap(ListMetricDescriptorsResponse* other) {
  using std::swap;
  CastToBase(&metric_descriptors_)->InternalSwap(CastToBase(&other->metric_descriptors_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ListMetricDescriptorsResponse::GetTypeName() const {
  return "google.monitoring.v3.ListMetricDescriptorsResponse";
}


// ===================================================================

void GetMetricDescriptorRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMetricDescriptorRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMetricDescriptorRequest::GetMetricDescriptorRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_GetMetricDescriptorRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetMetricDescriptorRequest)
}
GetMetricDescriptorRequest::GetMetricDescriptorRequest(const GetMetricDescriptorRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetMetricDescriptorRequest)
}

void GetMetricDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetMetricDescriptorRequest::~GetMetricDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetMetricDescriptorRequest)
  SharedDtor();
}

void GetMetricDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMetricDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMetricDescriptorRequest& GetMetricDescriptorRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_GetMetricDescriptorRequest.base);
  return *internal_default_instance();
}


void GetMetricDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetMetricDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetMetricDescriptorRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetMetricDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetMetricDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetMetricDescriptorRequest)
  return false;
#undef DO_
}

void GetMetricDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetMetricDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetMetricDescriptorRequest)
}

size_t GetMetricDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetMetricDescriptorRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMetricDescriptorRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GetMetricDescriptorRequest*>(&from));
}

void GetMetricDescriptorRequest::MergeFrom(const GetMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetMetricDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetMetricDescriptorRequest::CopyFrom(const GetMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetricDescriptorRequest::IsInitialized() const {
  return true;
}

void GetMetricDescriptorRequest::Swap(GetMetricDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMetricDescriptorRequest::InternalSwap(GetMetricDescriptorRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GetMetricDescriptorRequest::GetTypeName() const {
  return "google.monitoring.v3.GetMetricDescriptorRequest";
}


// ===================================================================

void CreateMetricDescriptorRequest::InitAsDefaultInstance() {
  ::google::monitoring::v3::_CreateMetricDescriptorRequest_default_instance_._instance.get_mutable()->metric_descriptor_ = const_cast< ::google::api::MetricDescriptor*>(
      ::google::api::MetricDescriptor::internal_default_instance());
}
void CreateMetricDescriptorRequest::clear_metric_descriptor() {
  if (GetArenaNoVirtual() == NULL && metric_descriptor_ != NULL) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateMetricDescriptorRequest::kNameFieldNumber;
const int CreateMetricDescriptorRequest::kMetricDescriptorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateMetricDescriptorRequest::CreateMetricDescriptorRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_CreateMetricDescriptorRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateMetricDescriptorRequest)
}
CreateMetricDescriptorRequest::CreateMetricDescriptorRequest(const CreateMetricDescriptorRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_metric_descriptor()) {
    metric_descriptor_ = new ::google::api::MetricDescriptor(*from.metric_descriptor_);
  } else {
    metric_descriptor_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateMetricDescriptorRequest)
}

void CreateMetricDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_descriptor_ = NULL;
}

CreateMetricDescriptorRequest::~CreateMetricDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateMetricDescriptorRequest)
  SharedDtor();
}

void CreateMetricDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metric_descriptor_;
}

void CreateMetricDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateMetricDescriptorRequest& CreateMetricDescriptorRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_CreateMetricDescriptorRequest.base);
  return *internal_default_instance();
}


void CreateMetricDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metric_descriptor_ != NULL) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateMetricDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.MetricDescriptor metric_descriptor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metric_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.CreateMetricDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateMetricDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateMetricDescriptorRequest)
  return false;
#undef DO_
}

void CreateMetricDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.MetricDescriptor metric_descriptor = 2;
  if (this->has_metric_descriptor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_metric_descriptor(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateMetricDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateMetricDescriptorRequest)
}

size_t CreateMetricDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.api.MetricDescriptor metric_descriptor = 2;
  if (this->has_metric_descriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metric_descriptor_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateMetricDescriptorRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CreateMetricDescriptorRequest*>(&from));
}

void CreateMetricDescriptorRequest::MergeFrom(const CreateMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_metric_descriptor()) {
    mutable_metric_descriptor()->::google::api::MetricDescriptor::MergeFrom(from.metric_descriptor());
  }
}

void CreateMetricDescriptorRequest::CopyFrom(const CreateMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMetricDescriptorRequest::IsInitialized() const {
  return true;
}

void CreateMetricDescriptorRequest::Swap(CreateMetricDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateMetricDescriptorRequest::InternalSwap(CreateMetricDescriptorRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(metric_descriptor_, other->metric_descriptor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CreateMetricDescriptorRequest::GetTypeName() const {
  return "google.monitoring.v3.CreateMetricDescriptorRequest";
}


// ===================================================================

void DeleteMetricDescriptorRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteMetricDescriptorRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteMetricDescriptorRequest::DeleteMetricDescriptorRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_DeleteMetricDescriptorRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.DeleteMetricDescriptorRequest)
}
DeleteMetricDescriptorRequest::DeleteMetricDescriptorRequest(const DeleteMetricDescriptorRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.DeleteMetricDescriptorRequest)
}

void DeleteMetricDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteMetricDescriptorRequest::~DeleteMetricDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.DeleteMetricDescriptorRequest)
  SharedDtor();
}

void DeleteMetricDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteMetricDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteMetricDescriptorRequest& DeleteMetricDescriptorRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_DeleteMetricDescriptorRequest.base);
  return *internal_default_instance();
}


void DeleteMetricDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteMetricDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.DeleteMetricDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.DeleteMetricDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.DeleteMetricDescriptorRequest)
  return false;
#undef DO_
}

void DeleteMetricDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteMetricDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.DeleteMetricDescriptorRequest)
}

size_t DeleteMetricDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteMetricDescriptorRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DeleteMetricDescriptorRequest*>(&from));
}

void DeleteMetricDescriptorRequest::MergeFrom(const DeleteMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteMetricDescriptorRequest::CopyFrom(const DeleteMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMetricDescriptorRequest::IsInitialized() const {
  return true;
}

void DeleteMetricDescriptorRequest::Swap(DeleteMetricDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteMetricDescriptorRequest::InternalSwap(DeleteMetricDescriptorRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DeleteMetricDescriptorRequest::GetTypeName() const {
  return "google.monitoring.v3.DeleteMetricDescriptorRequest";
}


// ===================================================================

void ListTimeSeriesRequest::InitAsDefaultInstance() {
  ::google::monitoring::v3::_ListTimeSeriesRequest_default_instance_._instance.get_mutable()->interval_ = const_cast< ::google::monitoring::v3::TimeInterval*>(
      ::google::monitoring::v3::TimeInterval::internal_default_instance());
  ::google::monitoring::v3::_ListTimeSeriesRequest_default_instance_._instance.get_mutable()->aggregation_ = const_cast< ::google::monitoring::v3::Aggregation*>(
      ::google::monitoring::v3::Aggregation::internal_default_instance());
}
void ListTimeSeriesRequest::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void ListTimeSeriesRequest::clear_aggregation() {
  if (GetArenaNoVirtual() == NULL && aggregation_ != NULL) {
    delete aggregation_;
  }
  aggregation_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTimeSeriesRequest::kNameFieldNumber;
const int ListTimeSeriesRequest::kFilterFieldNumber;
const int ListTimeSeriesRequest::kIntervalFieldNumber;
const int ListTimeSeriesRequest::kAggregationFieldNumber;
const int ListTimeSeriesRequest::kOrderByFieldNumber;
const int ListTimeSeriesRequest::kViewFieldNumber;
const int ListTimeSeriesRequest::kPageSizeFieldNumber;
const int ListTimeSeriesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTimeSeriesRequest::ListTimeSeriesRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListTimeSeriesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListTimeSeriesRequest)
}
ListTimeSeriesRequest::ListTimeSeriesRequest(const ListTimeSeriesRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_by().size() > 0) {
    order_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interval()) {
    interval_ = new ::google::monitoring::v3::TimeInterval(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_aggregation()) {
    aggregation_ = new ::google::monitoring::v3::Aggregation(*from.aggregation_);
  } else {
    aggregation_ = NULL;
  }
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&view_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListTimeSeriesRequest)
}

void ListTimeSeriesRequest::SharedCtor() {
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(page_size_));
}

ListTimeSeriesRequest::~ListTimeSeriesRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListTimeSeriesRequest)
  SharedDtor();
}

void ListTimeSeriesRequest::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete aggregation_;
}

void ListTimeSeriesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListTimeSeriesRequest& ListTimeSeriesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListTimeSeriesRequest.base);
  return *internal_default_instance();
}


void ListTimeSeriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListTimeSeriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && aggregation_ != NULL) {
    delete aggregation_;
  }
  aggregation_ = NULL;
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&view_)) + sizeof(page_size_));
  _internal_metadata_.Clear();
}

bool ListTimeSeriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListTimeSeriesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.TimeInterval interval = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.Aggregation aggregation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aggregation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_by = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_by()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_by().data(), static_cast<int>(this->order_by().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.order_by"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_view(static_cast< ::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListTimeSeriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListTimeSeriesRequest)
  return false;
#undef DO_
}

void ListTimeSeriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListTimeSeriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // .google.monitoring.v3.TimeInterval interval = 4;
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_interval(), output);
  }

  // .google.monitoring.v3.Aggregation aggregation = 5;
  if (this->has_aggregation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_aggregation(), output);
  }

  // string order_by = 6;
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), static_cast<int>(this->order_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.order_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->order_by(), output);
  }

  // .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
  if (this->view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->view(), output);
  }

  // int32 page_size = 8;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->page_size(), output);
  }

  // string page_token = 9;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->page_token(), output);
  }

  // string name = 10;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListTimeSeriesRequest)
}

size_t ListTimeSeriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListTimeSeriesRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string order_by = 6;
  if (this->order_by().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_by());
  }

  // string page_token = 9;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string name = 10;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.monitoring.v3.TimeInterval interval = 4;
  if (this->has_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interval_);
  }

  // .google.monitoring.v3.Aggregation aggregation = 5;
  if (this->has_aggregation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *aggregation_);
  }

  // .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
  if (this->view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->view());
  }

  // int32 page_size = 8;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTimeSeriesRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ListTimeSeriesRequest*>(&from));
}

void ListTimeSeriesRequest::MergeFrom(const ListTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListTimeSeriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.order_by().size() > 0) {

    order_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interval()) {
    mutable_interval()->::google::monitoring::v3::TimeInterval::MergeFrom(from.interval());
  }
  if (from.has_aggregation()) {
    mutable_aggregation()->::google::monitoring::v3::Aggregation::MergeFrom(from.aggregation());
  }
  if (from.view() != 0) {
    set_view(from.view());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListTimeSeriesRequest::CopyFrom(const ListTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListTimeSeriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTimeSeriesRequest::IsInitialized() const {
  return true;
}

void ListTimeSeriesRequest::Swap(ListTimeSeriesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTimeSeriesRequest::InternalSwap(ListTimeSeriesRequest* other) {
  using std::swap;
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_by_.Swap(&other->order_by_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(interval_, other->interval_);
  swap(aggregation_, other->aggregation_);
  swap(view_, other->view_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ListTimeSeriesRequest::GetTypeName() const {
  return "google.monitoring.v3.ListTimeSeriesRequest";
}


// ===================================================================

void ListTimeSeriesResponse::InitAsDefaultInstance() {
}
void ListTimeSeriesResponse::clear_time_series() {
  time_series_.Clear();
}
void ListTimeSeriesResponse::clear_execution_errors() {
  execution_errors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTimeSeriesResponse::kTimeSeriesFieldNumber;
const int ListTimeSeriesResponse::kNextPageTokenFieldNumber;
const int ListTimeSeriesResponse::kExecutionErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTimeSeriesResponse::ListTimeSeriesResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListTimeSeriesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListTimeSeriesResponse)
}
ListTimeSeriesResponse::ListTimeSeriesResponse(const ListTimeSeriesResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      time_series_(from.time_series_),
      execution_errors_(from.execution_errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListTimeSeriesResponse)
}

void ListTimeSeriesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListTimeSeriesResponse::~ListTimeSeriesResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListTimeSeriesResponse)
  SharedDtor();
}

void ListTimeSeriesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTimeSeriesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListTimeSeriesResponse& ListTimeSeriesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_ListTimeSeriesResponse.base);
  return *internal_default_instance();
}


void ListTimeSeriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListTimeSeriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_series_.Clear();
  execution_errors_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListTimeSeriesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListTimeSeriesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.monitoring.v3.TimeSeries time_series = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_time_series()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.rpc.Status execution_errors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_execution_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListTimeSeriesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListTimeSeriesResponse)
  return false;
#undef DO_
}

void ListTimeSeriesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListTimeSeriesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.TimeSeries time_series = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_series_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->time_series(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // repeated .google.rpc.Status execution_errors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->execution_errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->execution_errors(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListTimeSeriesResponse)
}

size_t ListTimeSeriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListTimeSeriesResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .google.monitoring.v3.TimeSeries time_series = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->time_series_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->time_series(static_cast<int>(i)));
    }
  }

  // repeated .google.rpc.Status execution_errors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->execution_errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->execution_errors(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTimeSeriesResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ListTimeSeriesResponse*>(&from));
}

void ListTimeSeriesResponse::MergeFrom(const ListTimeSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListTimeSeriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  time_series_.MergeFrom(from.time_series_);
  execution_errors_.MergeFrom(from.execution_errors_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListTimeSeriesResponse::CopyFrom(const ListTimeSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListTimeSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTimeSeriesResponse::IsInitialized() const {
  return true;
}

void ListTimeSeriesResponse::Swap(ListTimeSeriesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTimeSeriesResponse::InternalSwap(ListTimeSeriesResponse* other) {
  using std::swap;
  CastToBase(&time_series_)->InternalSwap(CastToBase(&other->time_series_));
  CastToBase(&execution_errors_)->InternalSwap(CastToBase(&other->execution_errors_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ListTimeSeriesResponse::GetTypeName() const {
  return "google.monitoring.v3.ListTimeSeriesResponse";
}


// ===================================================================

void CreateTimeSeriesRequest::InitAsDefaultInstance() {
}
void CreateTimeSeriesRequest::clear_time_series() {
  time_series_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTimeSeriesRequest::kNameFieldNumber;
const int CreateTimeSeriesRequest::kTimeSeriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTimeSeriesRequest::CreateTimeSeriesRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_CreateTimeSeriesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateTimeSeriesRequest)
}
CreateTimeSeriesRequest::CreateTimeSeriesRequest(const CreateTimeSeriesRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      time_series_(from.time_series_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateTimeSeriesRequest)
}

void CreateTimeSeriesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateTimeSeriesRequest::~CreateTimeSeriesRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateTimeSeriesRequest)
  SharedDtor();
}

void CreateTimeSeriesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateTimeSeriesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateTimeSeriesRequest& CreateTimeSeriesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_CreateTimeSeriesRequest.base);
  return *internal_default_instance();
}


void CreateTimeSeriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateTimeSeriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_series_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateTimeSeriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateTimeSeriesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.monitoring.v3.TimeSeries time_series = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_time_series()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.CreateTimeSeriesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateTimeSeriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateTimeSeriesRequest)
  return false;
#undef DO_
}

void CreateTimeSeriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateTimeSeriesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.TimeSeries time_series = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_series_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->time_series(static_cast<int>(i)),
      output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateTimeSeriesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateTimeSeriesRequest)
}

size_t CreateTimeSeriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateTimeSeriesRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .google.monitoring.v3.TimeSeries time_series = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->time_series_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->time_series(static_cast<int>(i)));
    }
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTimeSeriesRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CreateTimeSeriesRequest*>(&from));
}

void CreateTimeSeriesRequest::MergeFrom(const CreateTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateTimeSeriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  time_series_.MergeFrom(from.time_series_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CreateTimeSeriesRequest::CopyFrom(const CreateTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateTimeSeriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTimeSeriesRequest::IsInitialized() const {
  return true;
}

void CreateTimeSeriesRequest::Swap(CreateTimeSeriesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTimeSeriesRequest::InternalSwap(CreateTimeSeriesRequest* other) {
  using std::swap;
  CastToBase(&time_series_)->InternalSwap(CastToBase(&other->time_series_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CreateTimeSeriesRequest::GetTypeName() const {
  return "google.monitoring.v3.CreateTimeSeriesRequest";
}


// ===================================================================

void CreateTimeSeriesError::InitAsDefaultInstance() {
  ::google::monitoring::v3::_CreateTimeSeriesError_default_instance_._instance.get_mutable()->time_series_ = const_cast< ::google::monitoring::v3::TimeSeries*>(
      ::google::monitoring::v3::TimeSeries::internal_default_instance());
  ::google::monitoring::v3::_CreateTimeSeriesError_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void CreateTimeSeriesError::clear_time_series() {
  if (GetArenaNoVirtual() == NULL && time_series_ != NULL) {
    delete time_series_;
  }
  time_series_ = NULL;
}
void CreateTimeSeriesError::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTimeSeriesError::kTimeSeriesFieldNumber;
const int CreateTimeSeriesError::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTimeSeriesError::CreateTimeSeriesError()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_CreateTimeSeriesError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateTimeSeriesError)
}
CreateTimeSeriesError::CreateTimeSeriesError(const CreateTimeSeriesError& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_time_series()) {
    time_series_ = new ::google::monitoring::v3::TimeSeries(*from.time_series_);
  } else {
    time_series_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateTimeSeriesError)
}

void CreateTimeSeriesError::SharedCtor() {
  ::memset(&time_series_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&time_series_)) + sizeof(status_));
}

CreateTimeSeriesError::~CreateTimeSeriesError() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateTimeSeriesError)
  SharedDtor();
}

void CreateTimeSeriesError::SharedDtor() {
  if (this != internal_default_instance()) delete time_series_;
  if (this != internal_default_instance()) delete status_;
}

void CreateTimeSeriesError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateTimeSeriesError& CreateTimeSeriesError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto::scc_info_CreateTimeSeriesError.base);
  return *internal_default_instance();
}


void CreateTimeSeriesError::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateTimeSeriesError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && time_series_ != NULL) {
    delete time_series_;
  }
  time_series_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateTimeSeriesError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateTimeSeriesError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.monitoring.v3.TimeSeries time_series = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_series()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateTimeSeriesError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateTimeSeriesError)
  return false;
#undef DO_
}

void CreateTimeSeriesError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateTimeSeriesError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.monitoring.v3.TimeSeries time_series = 1;
  if (this->has_time_series()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_time_series(), output);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_status(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateTimeSeriesError)
}

size_t CreateTimeSeriesError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateTimeSeriesError)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .google.monitoring.v3.TimeSeries time_series = 1;
  if (this->has_time_series()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_series_);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTimeSeriesError::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CreateTimeSeriesError*>(&from));
}

void CreateTimeSeriesError::MergeFrom(const CreateTimeSeriesError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateTimeSeriesError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_time_series()) {
    mutable_time_series()->::google::monitoring::v3::TimeSeries::MergeFrom(from.time_series());
  }
  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
}

void CreateTimeSeriesError::CopyFrom(const CreateTimeSeriesError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateTimeSeriesError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTimeSeriesError::IsInitialized() const {
  return true;
}

void CreateTimeSeriesError::Swap(CreateTimeSeriesError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTimeSeriesError::InternalSwap(CreateTimeSeriesError* other) {
  using std::swap;
  swap(time_series_, other->time_series_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CreateTimeSeriesError::GetTypeName() const {
  return "google.monitoring.v3.CreateTimeSeriesError";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListMonitoredResourceDescriptorsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListMonitoredResourceDescriptorsResponse* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListMonitoredResourceDescriptorsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListMonitoredResourceDescriptorsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::GetMonitoredResourceDescriptorRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::GetMonitoredResourceDescriptorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::GetMonitoredResourceDescriptorRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListMetricDescriptorsRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListMetricDescriptorsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListMetricDescriptorsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListMetricDescriptorsResponse* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListMetricDescriptorsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListMetricDescriptorsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::GetMetricDescriptorRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::GetMetricDescriptorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::GetMetricDescriptorRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::CreateMetricDescriptorRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::CreateMetricDescriptorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::CreateMetricDescriptorRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::DeleteMetricDescriptorRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::DeleteMetricDescriptorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::DeleteMetricDescriptorRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListTimeSeriesRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListTimeSeriesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListTimeSeriesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListTimeSeriesResponse* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListTimeSeriesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListTimeSeriesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::CreateTimeSeriesRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::CreateTimeSeriesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::CreateTimeSeriesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::CreateTimeSeriesError* Arena::CreateMaybeMessage< ::google::monitoring::v3::CreateTimeSeriesError >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::CreateTimeSeriesError >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
