// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/monitored_resource.proto

#include "google/api/monitored_resource.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2flabel_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2flabel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LabelDescriptor;
}  // namespace protobuf_google_2fapi_2flabel_2eproto
namespace protobuf_google_2fapi_2fmonitored_5fresource_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fmonitored_5fresource_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fmonitored_5fresource_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MonitoredResource_LabelsEntry_DoNotUse;
}  // namespace protobuf_google_2fapi_2fmonitored_5fresource_2eproto
namespace protobuf_struct_5flite_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_struct_5flite_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue;
}  // namespace protobuf_struct_5flite_2eproto
namespace google {
namespace api {
class MonitoredResourceDescriptorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitoredResourceDescriptor>
      _instance;
} _MonitoredResourceDescriptor_default_instance_;
class MonitoredResource_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitoredResource_LabelsEntry_DoNotUse>
      _instance;
} _MonitoredResource_LabelsEntry_DoNotUse_default_instance_;
class MonitoredResourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitoredResource>
      _instance;
} _MonitoredResource_default_instance_;
class MonitoredResourceMetadata_UserLabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitoredResourceMetadata_UserLabelsEntry_DoNotUse>
      _instance;
} _MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_default_instance_;
class MonitoredResourceMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitoredResourceMetadata>
      _instance;
} _MonitoredResourceMetadata_default_instance_;
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fmonitored_5fresource_2eproto {
static void InitDefaultsMonitoredResourceDescriptor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MonitoredResourceDescriptor_default_instance_;
    new (ptr) ::google::api::MonitoredResourceDescriptor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::MonitoredResourceDescriptor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MonitoredResourceDescriptor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMonitoredResourceDescriptor}, {
      &protobuf_google_2fapi_2flabel_2eproto::scc_info_LabelDescriptor.base,}};

static void InitDefaultsMonitoredResource_LabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MonitoredResource_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::MonitoredResource_LabelsEntry_DoNotUse();
  }
  ::google::api::MonitoredResource_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MonitoredResource_LabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMonitoredResource_LabelsEntry_DoNotUse}, {}};

static void InitDefaultsMonitoredResource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MonitoredResource_default_instance_;
    new (ptr) ::google::api::MonitoredResource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::MonitoredResource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MonitoredResource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMonitoredResource}, {
      &protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResource_LabelsEntry_DoNotUse.base,}};

static void InitDefaultsMonitoredResourceMetadata_UserLabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse();
  }
  ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMonitoredResourceMetadata_UserLabelsEntry_DoNotUse}, {}};

static void InitDefaultsMonitoredResourceMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MonitoredResourceMetadata_default_instance_;
    new (ptr) ::google::api::MonitoredResourceMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::MonitoredResourceMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MonitoredResourceMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMonitoredResourceMetadata}, {
      &protobuf_struct_5flite_2eproto::scc_info_ListValue.base,
      &protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MonitoredResourceDescriptor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonitoredResource_LabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonitoredResource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonitoredResourceMetadata.base);
}

}  // namespace protobuf_google_2fapi_2fmonitored_5fresource_2eproto
namespace google {
namespace api {

// ===================================================================

void MonitoredResourceDescriptor::InitAsDefaultInstance() {
}
void MonitoredResourceDescriptor::clear_labels() {
  labels_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitoredResourceDescriptor::kNameFieldNumber;
const int MonitoredResourceDescriptor::kTypeFieldNumber;
const int MonitoredResourceDescriptor::kDisplayNameFieldNumber;
const int MonitoredResourceDescriptor::kDescriptionFieldNumber;
const int MonitoredResourceDescriptor::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitoredResourceDescriptor::MonitoredResourceDescriptor()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResourceDescriptor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MonitoredResourceDescriptor)
}
MonitoredResourceDescriptor::MonitoredResourceDescriptor(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  labels_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResourceDescriptor.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.MonitoredResourceDescriptor)
}
MonitoredResourceDescriptor::MonitoredResourceDescriptor(const MonitoredResourceDescriptor& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      labels_(from.labels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type(),
      GetArenaNoVirtual());
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.MonitoredResourceDescriptor)
}

void MonitoredResourceDescriptor::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MonitoredResourceDescriptor::~MonitoredResourceDescriptor() {
  // @@protoc_insertion_point(destructor:google.api.MonitoredResourceDescriptor)
  SharedDtor();
}

void MonitoredResourceDescriptor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MonitoredResourceDescriptor::ArenaDtor(void* object) {
  MonitoredResourceDescriptor* _this = reinterpret_cast< MonitoredResourceDescriptor* >(object);
  (void)_this;
}
void MonitoredResourceDescriptor::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MonitoredResourceDescriptor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MonitoredResourceDescriptor& MonitoredResourceDescriptor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResourceDescriptor.base);
  return *internal_default_instance();
}


void MonitoredResourceDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MonitoredResourceDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool MonitoredResourceDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.api.MonitoredResourceDescriptor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResourceDescriptor.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResourceDescriptor.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResourceDescriptor.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.LabelDescriptor labels = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_labels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResourceDescriptor.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.MonitoredResourceDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.MonitoredResourceDescriptor)
  return false;
#undef DO_
}

void MonitoredResourceDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.MonitoredResourceDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // repeated .google.api.LabelDescriptor labels = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->labels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->labels(static_cast<int>(i)),
      output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.api.MonitoredResourceDescriptor)
}

size_t MonitoredResourceDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MonitoredResourceDescriptor)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .google.api.LabelDescriptor labels = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->labels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->labels(static_cast<int>(i)));
    }
  }

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitoredResourceDescriptor::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MonitoredResourceDescriptor*>(&from));
}

void MonitoredResourceDescriptor::MergeFrom(const MonitoredResourceDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MonitoredResourceDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.type().size() > 0) {
    set_type(from.type());
  }
  if (from.display_name().size() > 0) {
    set_display_name(from.display_name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void MonitoredResourceDescriptor::CopyFrom(const MonitoredResourceDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MonitoredResourceDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitoredResourceDescriptor::IsInitialized() const {
  return true;
}

void MonitoredResourceDescriptor::Swap(MonitoredResourceDescriptor* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MonitoredResourceDescriptor* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MonitoredResourceDescriptor::UnsafeArenaSwap(MonitoredResourceDescriptor* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MonitoredResourceDescriptor::InternalSwap(MonitoredResourceDescriptor* other) {
  using std::swap;
  CastToBase(&labels_)->InternalSwap(CastToBase(&other->labels_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MonitoredResourceDescriptor::GetTypeName() const {
  return "google.api.MonitoredResourceDescriptor";
}


// ===================================================================

MonitoredResource_LabelsEntry_DoNotUse::MonitoredResource_LabelsEntry_DoNotUse() {}
MonitoredResource_LabelsEntry_DoNotUse::MonitoredResource_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void MonitoredResource_LabelsEntry_DoNotUse::MergeFrom(const MonitoredResource_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

void MonitoredResource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitoredResource::kTypeFieldNumber;
const int MonitoredResource::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitoredResource::MonitoredResource()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MonitoredResource)
}
MonitoredResource::MonitoredResource(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  labels_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResource.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.MonitoredResource)
}
MonitoredResource::MonitoredResource(const MonitoredResource& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.MonitoredResource)
}

void MonitoredResource::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MonitoredResource::~MonitoredResource() {
  // @@protoc_insertion_point(destructor:google.api.MonitoredResource)
  SharedDtor();
}

void MonitoredResource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MonitoredResource::ArenaDtor(void* object) {
  MonitoredResource* _this = reinterpret_cast< MonitoredResource* >(object);
  (void)_this;
}
void MonitoredResource::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MonitoredResource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MonitoredResource& MonitoredResource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResource.base);
  return *internal_default_instance();
}


void MonitoredResource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MonitoredResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool MonitoredResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.api.MonitoredResource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResource.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          MonitoredResource_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              MonitoredResource_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResource.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResource.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.MonitoredResource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.MonitoredResource)
  return false;
#undef DO_
}

void MonitoredResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.MonitoredResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResource.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // map<string, string> labels = 2;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResource.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResource.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MonitoredResource_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<MonitoredResource_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.api.MonitoredResource)
}

size_t MonitoredResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MonitoredResource)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // map<string, string> labels = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<MonitoredResource_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitoredResource::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MonitoredResource*>(&from));
}

void MonitoredResource::MergeFrom(const MonitoredResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MonitoredResource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.type().size() > 0) {
    set_type(from.type());
  }
}

void MonitoredResource::CopyFrom(const MonitoredResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MonitoredResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitoredResource::IsInitialized() const {
  return true;
}

void MonitoredResource::Swap(MonitoredResource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MonitoredResource* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MonitoredResource::UnsafeArenaSwap(MonitoredResource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MonitoredResource::InternalSwap(MonitoredResource* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MonitoredResource::GetTypeName() const {
  return "google.api.MonitoredResource";
}


// ===================================================================

MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse() {}
MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::MergeFrom(const MonitoredResourceMetadata_UserLabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

void MonitoredResourceMetadata::InitAsDefaultInstance() {
  ::google::api::_MonitoredResourceMetadata_default_instance_._instance.get_mutable()->system_labels_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
void MonitoredResourceMetadata::unsafe_arena_set_allocated_system_labels(
    ::google::protobuf::Struct* system_labels) {
  if (GetArenaNoVirtual() == NULL) {
    delete system_labels_;
  }
  system_labels_ = system_labels;
  if (system_labels) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.MonitoredResourceMetadata.system_labels)
}
void MonitoredResourceMetadata::clear_system_labels() {
  if (GetArenaNoVirtual() == NULL && system_labels_ != NULL) {
    delete system_labels_;
  }
  system_labels_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitoredResourceMetadata::kSystemLabelsFieldNumber;
const int MonitoredResourceMetadata::kUserLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitoredResourceMetadata::MonitoredResourceMetadata()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResourceMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MonitoredResourceMetadata)
}
MonitoredResourceMetadata::MonitoredResourceMetadata(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  user_labels_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResourceMetadata.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.MonitoredResourceMetadata)
}
MonitoredResourceMetadata::MonitoredResourceMetadata(const MonitoredResourceMetadata& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_labels_.MergeFrom(from.user_labels_);
  if (from.has_system_labels()) {
    system_labels_ = new ::google::protobuf::Struct(*from.system_labels_);
  } else {
    system_labels_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.MonitoredResourceMetadata)
}

void MonitoredResourceMetadata::SharedCtor() {
  system_labels_ = NULL;
}

MonitoredResourceMetadata::~MonitoredResourceMetadata() {
  // @@protoc_insertion_point(destructor:google.api.MonitoredResourceMetadata)
  SharedDtor();
}

void MonitoredResourceMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete system_labels_;
}

void MonitoredResourceMetadata::ArenaDtor(void* object) {
  MonitoredResourceMetadata* _this = reinterpret_cast< MonitoredResourceMetadata* >(object);
  (void)_this;
}
void MonitoredResourceMetadata::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MonitoredResourceMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MonitoredResourceMetadata& MonitoredResourceMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResourceMetadata.base);
  return *internal_default_instance();
}


void MonitoredResourceMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MonitoredResourceMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_labels_.Clear();
  if (GetArenaNoVirtual() == NULL && system_labels_ != NULL) {
    delete system_labels_;
  }
  system_labels_ = NULL;
  _internal_metadata_.Clear();
}

bool MonitoredResourceMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:google.api.MonitoredResourceMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Struct system_labels = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_labels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> user_labels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              MonitoredResourceMetadata_UserLabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&user_labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResourceMetadata.UserLabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResourceMetadata.UserLabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.MonitoredResourceMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.MonitoredResourceMetadata)
  return false;
#undef DO_
}

void MonitoredResourceMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.MonitoredResourceMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct system_labels = 1;
  if (this->has_system_labels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_system_labels(), output);
  }

  // map<string, string> user_labels = 2;
  if (!this->user_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResourceMetadata.UserLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResourceMetadata.UserLabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->user_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->user_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->user_labels().begin();
          it != this->user_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MonitoredResourceMetadata_UserLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(user_labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<MonitoredResourceMetadata_UserLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->user_labels().begin();
          it != this->user_labels().end(); ++it) {
        entry.reset(user_labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:google.api.MonitoredResourceMetadata)
}

size_t MonitoredResourceMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MonitoredResourceMetadata)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // map<string, string> user_labels = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->user_labels_size());
  {
    ::std::unique_ptr<MonitoredResourceMetadata_UserLabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->user_labels().begin();
        it != this->user_labels().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(user_labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // .google.protobuf.Struct system_labels = 1;
  if (this->has_system_labels()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_labels_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitoredResourceMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MonitoredResourceMetadata*>(&from));
}

void MonitoredResourceMetadata::MergeFrom(const MonitoredResourceMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MonitoredResourceMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_labels_.MergeFrom(from.user_labels_);
  if (from.has_system_labels()) {
    mutable_system_labels()->::google::protobuf::Struct::MergeFrom(from.system_labels());
  }
}

void MonitoredResourceMetadata::CopyFrom(const MonitoredResourceMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MonitoredResourceMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitoredResourceMetadata::IsInitialized() const {
  return true;
}

void MonitoredResourceMetadata::Swap(MonitoredResourceMetadata* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MonitoredResourceMetadata* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MonitoredResourceMetadata::UnsafeArenaSwap(MonitoredResourceMetadata* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MonitoredResourceMetadata::InternalSwap(MonitoredResourceMetadata* other) {
  using std::swap;
  user_labels_.Swap(&other->user_labels_);
  swap(system_labels_, other->system_labels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MonitoredResourceMetadata::GetTypeName() const {
  return "google.api.MonitoredResourceMetadata";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::MonitoredResourceDescriptor* Arena::CreateMaybeMessage< ::google::api::MonitoredResourceDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResourceDescriptor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::MonitoredResource_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::MonitoredResource_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResource_LabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::MonitoredResource* Arena::CreateMaybeMessage< ::google::api::MonitoredResource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::MonitoredResourceMetadata* Arena::CreateMaybeMessage< ::google::api::MonitoredResourceMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResourceMetadata >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
